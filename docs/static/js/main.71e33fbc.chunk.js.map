{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategory","useState","inputValue","setInputValue","onSubmit","event","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","image","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"+KAGe,SAASA,EAAT,GAAuC,IAAhBC,EAAe,EAAfA,YAClC,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAXe,SAACC,GACtBA,EAAMC,iBAEFJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAY,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACpCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAnBc,SAACP,GAAW,IAAD,EACjCF,EAAa,OAACE,QAAD,IAACA,GAAD,UAACA,EAAOQ,cAAR,aAAC,EAAeF,Y,mCCPxBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,IACzB,MAAO,CACHC,GAAE,OAAED,QAAF,IAAEA,OAAF,EAAEA,EAAKC,GACTC,OAAU,OAAHF,QAAG,IAAHA,OAAA,EAAAA,EAAKE,QAAS,gBACrBV,IAAG,OAAEQ,QAAF,IAAEA,GAAF,UAAEA,EAAKG,cAAP,iBAAE,EAAaC,wBAAf,aAAE,EAA+BZ,QATzB,kBAaZM,GAbY,4CAAH,sD,KCiBLO,MAdf,YAAsC,IAAfb,EAAc,EAAdA,IAAKU,EAAS,EAATA,MACxB,OACI,sBAAKI,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QC2BDO,MA5Bf,YAAgC,IAAbnB,EAAY,EAAZA,SACf,ECJwB,SAACA,GACzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAU,WACNxB,EAAQC,GAAUwB,MAAK,SAACX,GACpBS,EAAS,CACLf,KAAMM,EACNO,SAAS,SAIlB,CAACpB,IAEGqB,EDZ2BI,CAAazB,GAAjCa,EAAd,EAAQN,KAAca,EAAtB,EAAsBA,QAEtB,OACI,qCACI,6BAAKpB,IAEJoB,GAAW,mBAAGJ,UAAU,mCAAb,sBAEZ,qBAAKA,UAAU,YAAf,SAEQH,GAAUA,EAAOJ,KAAI,SAAAiB,GAAK,OAEtB,cAAC,EAAD,eAEQA,GADCA,EAAMf,aEQxBgB,MAvBf,WACI,MAAkCzC,mBAAS,CAAC,qBAA5C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAEA,OACI,qCACI,8CAEA,cAACD,EAAD,CAAaC,YAAaA,IAE1B,uBAEA,6BACK2C,EAAWnB,KAAI,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAUA,GADLA,YCZ7B6B,IAASC,OACP,cAAC,EAAD,IAEAC,SAASC,eAAe,U","file":"static/js/main.71e33fbc.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport default function AddCategory({ setCategory }) {\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (event) => {\n        setInputValue(event?.target?.value);\n    }\n\n    const handleFormSubmit = (event) => {\n        event.preventDefault();\n\n        if (inputValue.trim().length > 2) {\n\n            setCategory(cats => [inputValue, ...cats]);\n            setInputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={handleFormSubmit}>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategory: PropTypes.func.isRequired\n}\n","export const getGifs = async (category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=mUm0Qr5WKThOgPL9eEi21FMAbwoni8K6`;\n\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n    const gifs = data.map(img => {\n        return {\n            id: img?.id,\n            title: img?.title || 'No hay titulo',\n            url: img?.images?.downsized_medium?.url,\n        }\n    });\n\n    return gifs;\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './../index.css';\nfunction GifGridItem({ url, title }) {\n    return (\n        <div className=\"card animate__animated animate__bounce\">\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n\nGifGridItem.propTypes = {\n    url: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n}\n\nexport default GifGridItem\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport GifGridItem from './GifGridItem';\n\nfunction GifGrid({ category }) {\n    const { data: images, loading } = useFetchGifs(category); // data:images renombre lo que llega como data por images\n\n    return (\n        <>\n            <h3>{category}</h3>\n\n            {loading && <p className=\"animate__animated animate__flash\">Cargando</p>}\n\n            <div className=\"card-grid\">\n                {\n                    images && images.map(image => (\n\n                        <GifGridItem\n                            key={image.id}\n                            {...image}\n                        />\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n\nGifGrid.propTypes = {\n    category: PropTypes.string.isRequired\n}\n\nexport default GifGrid\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n    const [state, setstate] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        getGifs(category).then((images) => {\n            setstate({\n                data: images,\n                loading: false\n            });\n        });\n\n    }, [category])\n\n    return state;\n}\n","import React, { useState } from 'react'\n\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nfunction GifExpertApp() {\n    const [categories, setCategory] = useState(['Kimetsu no yaiba']);\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n\n            <AddCategory setCategory={setCategory} />\n\n            <hr />\n\n            <ul>\n                {categories.map(category => (\n                    <GifGrid\n                        key={category}\n                        category={category}\n                    />\n                ))}\n            </ul>\n        </>\n    )\n}\n\nexport default GifExpertApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}